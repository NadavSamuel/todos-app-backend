{"version":3,"sources":["services/customHooks.js","services/httpService.js","services/todosService.ts","stores/TodosStore.tsx","services/userService.js","stores/UserStore.tsx","stores/SystemStore.tsx","stores/RootStore.tsx","cmps/ColorPalate.tsx","cmps/TxtTodo.tsx","cmps/MarkableCmp.tsx","cmps/ListTodo.tsx","cmps/BrokenUrlMsg.tsx","cmps/VideoImgTodo.tsx","services/mixins.tsx","cmps/NewTodoCard.tsx","cmps/Head.tsx","cmps/TodoCard.tsx","cmps/TodosList.tsx","cmps/NoTodosMsg.tsx","cmps/ErrorModal.tsx","pages/TodosApp.tsx","assets/profile.jpg","pages/About.tsx","cmps/LoginErrMsg.tsx","pages/Login.tsx","cmps/Navbar.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["useForm","initialState","cb","useState","fields","setFields","useEffect","event","value","target","type","name","todoToEditValues","BASE_URL","axios","Axios","create","withCredentials","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","window","location","assign","todosService","query","filterBy","queryStr","title","httpService","save","todoToSave","_id","Promise","resolve","remove","todoId","getById","makeId","length","text","possible","i","charAt","Math","floor","random","TodosStore","rootStore","userStore","todos","todosAmount","this","makeAutoObservable","runInAction","getTotalTodosNumber","newTodo","err","todoToDeleteId","loadTodos","newFilter","totalTodos","slice","sort","b","Number","pinned","login","logout","signup","getUsers","userId","update","user","userCred","_handleLogin","sessionStorage","clear","setItem","JSON","stringify","require","UserStore","systemStore","loggedInUser","parse","getItem","userCreds","userService","currUser","isError","existingError","onErrorHandle","onError","newUser","SystemStore","isLoading","errorStatus","setTimeout","RootStoreContext","createContext","todosStore","ColorPalate","onChooseColor","className","map","color","idx","onClick","style","backgroundColor","TxtTodo","txt","onContentEditable","contentEditableRef","useRef","innerRef","html","disabled","onChange","tagName","MarkableCmp","onToggleMarkable","markable","onDeleteMarkable","mark","isDone","List","Item","as","Message","Button","icon","stopPropagation","ListTodo","markables","onAddMarkable","placeholder","newMarkable","handleChange","clearFildes","Fragment","Header","task","Form","onSubmit","Input","autoComplete","BrokenUrlMsg","cmpType","Segment","VideoImgTodo","onNewUrl","isNewTxt","isNewTodo","newUrl","extractVideoId","videoid","split","ampersandPosition","indexOf","substring","setIsError","isImgError","Image","src","alt","Embed","id","source","setRelevantPlaceholder","todoType","setTodoByType","onTxtChange","NewTodoCard","onTodoSubmit","isSendTodo","bgc","setTitle","setTxt","setIsPinned","setMarkables","setBcg","setPaleteOpen","onSendTodo","paleteOpen","cardTitleRef","Card","centered","transition","maxHeight","Icon","marginBottom","alignSelf","Description","markableToDelete","filter","markableToAdd","Content","textAlign","Popup","on","open","onClose","onOpen","trigger","circular","Head","observer","rootStoreContext","useContext","username","setTodoType","setIsSendTodo","todoToSubmit","turnLoaderOn","saveTodo","turnLoaderOff","setFilter","isMultipleTodos","Container","Select","e","options","key","minWidth","moment","TodoCard","todo","created","lastUpdated","setIsNewTxt","deleteTodo","debounce","txtChange","onUpdateTodo","todoToUpdate","clearTimeout","fromNow","isDebounce","markableTxt","push","markableToToggle","isShowEditBtn","active","chosenClr","TodosList","breakpointColumnsObj","default","1100","700","500","breakpointCols","columnClassName","NoTodosMsg","ErrorModal","onHandleSystemError","position","top","border","left","right","bottom","zIndex","height","display","flexDirection","justifyContent","error","floating","basic","TodosApp","sortedTodos","router","useHistory","getLoggedInUser","Error","onAppLoad","Dimmer","About","size","Profile","href","LoginErrMsg","msgContent","negative","Login","email","password","credentials","isSignup","setIsSignup","mediaQuery","matches","setMatches","media","matchMedia","listener","addListener","removeListener","useMediaQuery","determinFildesWidth","onlogin","onSignup","formBtnContent","signupBtnContent","usernameFiled","Field","width","alignItems","content","Navbar","Menu","fluid","to","inverted","Loader","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d8eaebd.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n// var window = require(\"global/window\")\r\n\r\nexport function useForm(initialState, cb = function () { }) {\r\n    const [fields, setFields] = useState(initialState);\r\n\r\n    useEffect(() => { cb(fields) }, [fields])\r\n\r\n    return [\r\n        fields,\r\n        function (event) {\r\n            \r\n            const value = event.target.type === 'number' ? +event.target.value : event.target.value\r\n            setFields({\r\n                ...fields,\r\n                [event.target.name]: value\r\n            });\r\n            // console.log('cb, ',cb)\r\n            // if(cb) cb(value)\r\n         \r\n        },\r\n        function () {\r\n            setFields(initialState);\r\n        },\r\n        function (todoToEditValues) {\r\n            setFields(todoToEditValues);\r\n        }\r\n    ];\r\n}\r\nexport function useMediaQuery(query) {\r\n    const [matches, setMatches] = useState(false);\r\n  \r\n    useEffect(() => {\r\n      const media = window.matchMedia(query);\r\n      if (media.matches !== matches) {\r\n        setMatches(media.matches);\r\n      }\r\n      const listener = () => {\r\n        setMatches(media.matches);\r\n      };\r\n      media.addListener(listener);\r\n      return () => media.removeListener(listener);\r\n    }, [matches, query]);\r\n  \r\n    return matches;\r\n  }\r\n","import Axios from 'axios';\r\n// const corsAnywhere = `https://cors-anywhere.herokuapp.com/`\r\n// const serverAddress = `https://todos-next-js.herokuapp.com/api/`\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? 'https://todos-app-nadav-s.herokuapp.com/api/'\r\n    : '//localhost:3030/api/'\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\n\r\nexport default {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login');\r\n        }\r\n        throw err.response.status;\r\n        \r\n    }\r\n}","import httpService from './httpService';\r\nimport { Todo } from '../interfaces'\r\nimport {FilterBy} from '../interfaces'\r\n\r\nexport const todosService = {\r\n    query,\r\n    save,\r\n    remove,\r\n    getById,\r\n    makeId\r\n}\r\nfunction query(filterBy:FilterBy) {\r\n    let queryStr:string = ``;\r\n    if (filterBy.title)  queryStr += `?title=${filterBy.title}`;\r\n    return httpService.get(`todo${queryStr || ''}`);\r\n}\r\n\r\nfunction getById(todoId: string) {\r\n    return httpService.get(`todo/${todoId}`)\r\n}\r\n\r\nfunction remove(todoId: string) {\r\n    return httpService.delete(`todo/${todoId}`)\r\n}\r\n\r\nfunction save(todoToSave: Todo) {\r\n    if (todoToSave._id) {\r\n        httpService.put(`todo/`,{todoToSave})\r\n    } else {\r\n        httpService.post(`todo/`,{todoToSave})\r\n    }\r\n    return Promise.resolve(todoToSave);\r\n}\r\n\r\nfunction makeId(length:number = 5):string {\r\n    var text:string = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i:number = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n}\r\n","import { Todo } from '../interfaces'\r\nimport { makeAutoObservable, runInAction,  } from \"mobx\"\r\nimport { RootStore } from './RootStore'\r\nimport { UserStore } from './UserStore'\r\nimport { todosService } from '../services/todosService'\r\nimport { FilterBy } from '../interfaces'\r\nexport class TodosStore {\r\n    rootStore: RootStore\r\n    userStore: UserStore\r\n    constructor(rootStore: RootStore, userStore: UserStore) {\r\n        this.rootStore = rootStore\r\n        this.userStore = userStore\r\n        makeAutoObservable(this)  \r\n    }\r\n    todos: Todo[] | null = null;\r\n    filterBy: FilterBy = { title: '' }\r\n    todosAmount: number = 0\r\n\r\n    loadTodos() {\r\n        runInAction(async () => {\r\n            this.todos = await todosService.query(this.filterBy);\r\n            this.getTotalTodosNumber()\r\n        })\r\n    }\r\n    saveTodo(newTodo: Todo) {\r\n        try {\r\n            runInAction(async () => {\r\n                await todosService.save(newTodo)\r\n            })\r\n        }\r\n        catch (err) {\r\n            console.log('err in save action!', err)\r\n        }\r\n    }\r\n    async deleteTodo(todoToDeleteId: string) {\r\n        try {\r\n            await todosService.remove(todoToDeleteId)\r\n            await this.loadTodos()\r\n        }\r\n        catch (err) {\r\n            console.log('err in delete action!', err)\r\n        }\r\n\r\n    }\r\n    setFilter(newFilter) {\r\n        runInAction(() => {\r\n            this.filterBy.title = newFilter;\r\n        })\r\n    }\r\n    get sortedTodos() {\r\n        if (!this.todos) return null\r\n        return this.todos.slice().sort((a, b) => Number(b.pinned) - Number(a.pinned));\r\n    }\r\n    async getTotalTodosNumber() {\r\n        const totalTodos = await todosService.query({ title: '' });\r\n        const length = totalTodos.length\r\n        runInAction(() => {\r\n            this.todosAmount = length\r\n        })\r\n    }\r\n}","import httpService from './httpService'\r\n\r\nexport default {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n}\r\n\r\n\r\nfunction getUsers() {\r\n    return httpService.get('user')\r\n}\r\n\r\nfunction getById(userId) {\r\n    return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nfunction update(user) {\r\n    return httpService.put(`user/${user._id}`, user)\r\n}\r\n\r\nasync function login(userCred) {\r\n    const user = await httpService.post('auth/login', userCred)\r\n    return _handleLogin(user)\r\n}\r\nasync function signup(userCred) {\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _handleLogin(user)\r\n}\r\nasync function logout() {\r\n    await httpService.post('auth/logout');\r\n    sessionStorage.clear();\r\n}\r\nfunction _handleLogin(user) {\r\n    sessionStorage.setItem('user', JSON.stringify(user))\r\n    return user;\r\n}\r\n// function getLoggedInUser() {\r\n//     const currUser = sessionStorage.getItem('user')\r\n\r\n//     return JSON.parse(currUser)\r\n// }","import { User } from '../interfaces'\r\nimport { makeAutoObservable, runInAction } from \"mobx\"\r\nimport { RootStore } from './RootStore'\r\nimport userService from '../services/userService'\r\nimport { SystemStore } from './SystemStore'\r\n\r\nconst window = require(\"global/window\")\r\nconst { sessionStorage } = window\r\n\r\nexport class UserStore {\r\n    rootStore: RootStore\r\n    systemStore: SystemStore\r\n    constructor(rootStore: RootStore, systemStore:SystemStore) {\r\n        this.rootStore = rootStore\r\n        this.systemStore = systemStore\r\n        makeAutoObservable(this)\r\n    }\r\n    loggedInUser: User | null = null\r\n    getLoggedInUser() {\r\n        runInAction(() => {\r\n            this.loggedInUser = JSON.parse(sessionStorage.getItem('user'));\r\n        })\r\n    }\r\n    async onlogin(userCreds) {\r\n        try {\r\n            const currUser = await userService.login(userCreds);\r\n            runInAction(() => {\r\n                if(this.systemStore.isError.existingError) this.systemStore.onErrorHandle();\r\n                this.loggedInUser = currUser;\r\n            })\r\n        }\r\n        catch (err) {\r\n            console.log(err)\r\n            if (err === 401) {\r\n                this.systemStore.onError(401);\r\n            }\r\n            else this.systemStore.onError();\r\n            \r\n        }\r\n    }\r\n    async onSignup(userCreds) {\r\n        const newUser = await userService.signup(userCreds);\r\n        runInAction(() => {\r\n            this.loggedInUser = newUser;\r\n        })\r\n    }\r\n    async logout() {\r\n        await userService.logout();\r\n        runInAction(() => {\r\n            this.loggedInUser = null;\r\n        })\r\n\r\n    }\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\"\r\nimport { RootStore } from './RootStore'\r\ninterface error{\r\n    existingError:boolean\r\n    errorStatus:number | null\r\n}\r\nexport class SystemStore {\r\n    rootStore: RootStore\r\n    \r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n        makeAutoObservable(this);    \r\n    }\r\n\r\n    isLoading:boolean = false;\r\n    isError:error = {\r\n        existingError:false,\r\n        errorStatus:null\r\n    };\r\n    \r\n    \r\n    turnLoaderOn(){\r\n        runInAction(() =>{\r\n            this.isLoading = true\r\n        })\r\n    }\r\n    turnLoaderOff(){\r\n        runInAction(() =>{\r\n            setTimeout(() => this.isLoading = false,1500)            \r\n        })\r\n\r\n    }\r\n    onError(errorStatus =null){\r\n        runInAction(() =>{\r\n            this.isError.existingError = true;\r\n            if(errorStatus) this.isError.errorStatus = errorStatus;\r\n        })\r\n    }\r\n    onErrorHandle(){\r\n        runInAction(() =>{\r\n            this.isError.existingError = false;\r\n            this.isError.errorStatus = null;\r\n        })\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { createContext } from 'react'\r\nimport {TodosStore} from './TodosStore'\r\nimport { UserStore } from './UserStore'\r\nimport { SystemStore } from './SystemStore'\r\n// import {createContext} from 'react'\r\nexport class RootStore{\r\n    systemStore = new SystemStore(this)\r\n    userStore = new UserStore(this,this.systemStore)\r\n    todosStore = new TodosStore(this,this.userStore)\r\n}\r\n\r\nexport const RootStoreContext = createContext(new RootStore())","import React from 'react'\r\n\r\ninterface ColorPalateProps {\r\n    onChooseColor(color: string): void\r\n\r\n}\r\n\r\nexport const ColorPalate: React.FC<ColorPalateProps> = ({ onChooseColor }) => {\r\n    const colors = ['#fff475', '#fbbc04', '#f28b82', 'white', '#aecbfa', '#cbf0f8', '#a7ffeb', '#ccff90','#e8eaed','#e6c9a8','#fdcfe8','#d7aefb']\r\n    return (\r\n        <section className=\"color-palate\">\r\n            {colors.map((color, idx) => {\r\n                return (\r\n                        <div  key={color} onClick={() => onChooseColor(color)} className={`color color-${color} cursor-pointer`} style={{ backgroundColor: color }}>\r\n                            \r\n                        </div>\r\n                )\r\n            })}\r\n        </section>\r\n\r\n    );\r\n}","import React, { useRef } from 'react'\r\nimport ContentEditable from 'react-contenteditable'\r\n\r\ninterface TxtTodoProps {\r\n    txt: string\r\n    onContentEditable(txt:string): void\r\n}\r\nexport const TxtTodo: React.FC<TxtTodoProps> = ({ txt, onContentEditable }) => {\r\n    const contentEditableRef = useRef();\r\n     function onTxtChange(event){\r\n        onContentEditable(event.target.value);\r\n    }\r\n    return (\r\n        <ContentEditable\r\n            innerRef={contentEditableRef}\r\n            html={txt}\r\n            disabled={false} \r\n            onChange={ onTxtChange}\r\n            tagName='p'\r\n            />\r\n    );\r\n}","import React from 'react'\r\nimport { Markable } from '../interfaces'\r\nimport { Button,List,Message } from 'semantic-ui-react'\r\n\r\ninterface MarkableProps {\r\n    markable: Markable,\r\n    onToggleMarkable(markable: Markable): void,\r\n    onToggleMarkable(markable: Markable): void,\r\n    onDeleteMarkable(markableTxt: string): void\r\n}\r\nexport const MarkableCmp: React.FC<MarkableProps> = ({ onToggleMarkable, markable, onDeleteMarkable }) => {\r\n    const { txt, isDone } = markable\r\n    const mark = isDone ? 'blue' : null;\r\n    function dispatchDeleteMarkable(event) {\r\n        event.stopPropagation()\r\n        onDeleteMarkable(txt);\r\n    }\r\n    return (\r\n        <List.Item as=\"li\"  className={`markable `} key={txt} onClick={() => onToggleMarkable(markable)} >\r\n            <Message color = { mark }>{txt}</Message>\r\n            <Button  icon=\"delete\" onClick={dispatchDeleteMarkable}></Button>\r\n        </List.Item>\r\n\r\n    );\r\n}","import React from 'react'\r\nimport { MarkableCmp } from './MarkableCmp'\r\nimport { Header,Form,Input,List } from 'semantic-ui-react'\r\nimport { Markable } from '../interfaces'\r\nimport { useForm } from '../services/customHooks'\r\n\r\ninterface ListTodoProps {\r\n    markables: Markable[],\r\n    onToggleMarkable(markable: Markable): void,\r\n    onAddMarkable(markableToAdd:Markable):void,\r\n    onDeleteMarkable(markableTxt:string):void,\r\n    placeholder: string,\r\n\r\n}\r\n\r\nexport const ListTodo: React.FC<ListTodoProps> = ({ markables, onToggleMarkable,onAddMarkable,onDeleteMarkable,placeholder }) => {\r\n    const [newMarkable, handleChange,clearFildes] = useForm({ txt: '', isDone: null });\r\n     function onsubmitNewMarkable(){\r\n         newMarkable.isDone= false\r\n         onAddMarkable(newMarkable);\r\n         clearFildes()\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header as='h4' >\r\n                To do:\r\n                </Header>\r\n            <List className=\"list-markabeles cursor-pointer\">\r\n                {markables && markables.map(task => {\r\n                    return <MarkableCmp onDeleteMarkable={onDeleteMarkable} markable={task} onToggleMarkable={onToggleMarkable} key={task.txt} />\r\n                })}\r\n            </List>\r\n            <Form onSubmit={onsubmitNewMarkable}>\r\n                <Input placeholder={placeholder} autoComplete=\"off\" name='txt' onChange={handleChange} value={newMarkable.txt} />\r\n            </Form>\r\n        </React.Fragment>\r\n\r\n    )\r\n}","import React from 'react'\r\nimport { Segment } from 'semantic-ui-react'\r\n\r\ninterface BrokenUrlMsgProps {\r\n    cmpType:string\r\n\r\n}\r\n\r\nexport const BrokenUrlMsg: React.FC<BrokenUrlMsgProps> = ({cmpType}) => {\r\n    // const Segment = require('semantic-ui-react')\r\n\r\n        return (\r\n            <Segment>OOPS! seems like your {cmpType} url is broken, plese try a different url.</Segment>\r\n        );\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Embed, Input, Form, Image } from 'semantic-ui-react'\r\nimport { BrokenUrlMsg } from './BrokenUrlMsg'\r\nimport { useForm } from '../services/customHooks'\r\n\r\ninterface VideoImgTodoProps {\r\n    url: string,\r\n    onNewUrl(txt: string, isDebounce?: boolean): void,\r\n    placeholder: string,\r\n    isNewTxt: boolean,\r\n    type: string,\r\n    isNewTodo: boolean\r\n}\r\n\r\nexport const VideoImgTodo: React.FC<VideoImgTodoProps> = ({ url, onNewUrl, placeholder, isNewTxt, type, isNewTodo }) => {\r\n    const [newUrl, handleChange] = useForm({ txt: '' });\r\n    useEffect(() => {\r\n        newUrl.txt = '';\r\n        setIsError(false);\r\n    }, [url])\r\n\r\n    function extractVideoId(): string | null {\r\n        try {\r\n            if (!url) {\r\n                return\r\n            }\r\n            let videoid = url.split('v=')[1];\r\n            const ampersandPosition = videoid.indexOf('&');\r\n            videoid = videoid.substring(0, ampersandPosition);\r\n            return videoid;\r\n\r\n        }\r\n        catch {\r\n            return null\r\n        }\r\n    }\r\n    function onSendNewUrl(): void {\r\n        onNewUrl(newUrl.txt, false);\r\n    }\r\n    function onComposeNewTodo(event): void {\r\n        handleChange(event)\r\n        onNewUrl(event.target.value, false);\r\n\r\n    }\r\n    const [isImgError, setIsError] = useState(false);\r\n    if (isNewTodo && isNewTxt) {\r\n        return (\r\n            <Form >\r\n                <Input name='txt' placeholder={placeholder} onChange={onComposeNewTodo}  value={newUrl.txt} />\r\n            </Form>\r\n        )\r\n    }\r\n    if (isNewTxt) {\r\n        return (\r\n        <Form onSubmit={onSendNewUrl}>\r\n            <Input name='txt' placeholder={placeholder} onChange={handleChange} value={newUrl.txt} />\r\n        </Form>\r\n    )}\r\n\r\n    if ((!extractVideoId() && type === 'video')) return <BrokenUrlMsg cmpType={'video'} />\r\n    if ((type === 'img' && isImgError)) return <BrokenUrlMsg cmpType={'image'} />\r\n    if (type === 'img') return (\r\n        <Image onError={() => setIsError(true)} src={url} alt=\"\" />\r\n    )\r\n\r\n    if (type === 'video') return (\r\n        <Embed\r\n            id={extractVideoId()} source=\"youtube\" />\r\n    )\r\n}\r\n"," import { TxtTodo } from '../cmps/TxtTodo'\r\nimport { ListTodo } from '../cmps/ListTodo'\r\nimport { VideoImgTodo } from '../cmps/VideoImgTodo'\r\nimport {Markable} from '../interfaces'\r\n\r\nexport function setRelevantPlaceholder(todoType:string):string {\r\n    switch (todoType) {\r\n            case 'txt':\r\n                    return 'Enter todo text'\r\n            case 'list':\r\n                    return 'Enter todos'\r\n            case 'img':\r\n                    return 'Enter an image URL'\r\n            case 'video':\r\n                    return 'Enter a youtube URL'\r\n    }\r\n}\r\n\r\nexport function setTodoByType(type:string,txt?:string,\r\nonTxtChange?:(txt: string) =>void,onDeleteMarkable?:(markableTxt:string)=>void,\r\nonAddMarkable?:(markableToAdd:Markable)=>void,\r\nonToggleMarkable?:(markableToToggle:Markable)=>void,markables?:Markable[],\r\nisNewTxt?:boolean, isNewTodo:boolean = false) {\r\n        switch (type) {\r\n            case 'txt':\r\n                return <TxtTodo txt={txt} onContentEditable={onTxtChange} />\r\n            case 'list':\r\n                return <ListTodo onDeleteMarkable={onDeleteMarkable} placeholder={setRelevantPlaceholder(type)} onAddMarkable={onAddMarkable} onToggleMarkable={onToggleMarkable} markables={markables} />\r\n            case 'img':\r\n                return <VideoImgTodo isNewTodo={isNewTodo} type={type} isNewTxt={isNewTxt} placeholder={setRelevantPlaceholder(type)} onNewUrl={onTxtChange} url={txt} />\r\n            case 'video':\r\n                return <VideoImgTodo isNewTodo={isNewTodo} type={type} isNewTxt={isNewTxt} placeholder={setRelevantPlaceholder(type)} onNewUrl={onTxtChange} url={txt} />\r\n        }\r\n    }","import React, {  useState, useRef, useEffect } from 'react'\r\nimport { Markable, Todo } from '../interfaces'\r\nimport { Button, Icon, Popup, Card } from 'semantic-ui-react'\r\nimport { ColorPalate } from './ColorPalate'\r\nimport ContentEditable from 'react-contenteditable'\r\nimport { setTodoByType } from '../services/mixins'\r\n\r\ninterface NewTodoCardProps {\r\n    type: string,\r\n    onTodoSubmit(todo: Todo): void,\r\n    isSendTodo?: boolean\r\n\r\n}\r\nexport const NewTodoCard: React.FC<NewTodoCardProps> = ({ type, onTodoSubmit, isSendTodo = false }) => {\r\n\r\n    useEffect(() => {\r\n        if (isSendTodo) onSendTodo();\r\n        isSendTodo = false;\r\n\r\n    })\r\n    const [title, setTitle] = useState<string>('Title');\r\n    const [bgc, setBcg] = useState<string | null>(null);\r\n    const [txt, setTxt] = useState<string>('Enter txt here');\r\n    const [pinned, setIsPinned] = useState<boolean>(false);\r\n    const [markables, setMarkables] = useState<Markable[]>([]);\r\n    const [paleteOpen, setPaleteOpen] = useState<boolean>(false);\r\n    const isNewTxt: boolean = true;\r\n    const isNewTodo: boolean = true;\r\n    const cardTitleRef = useRef();\r\n    function onTitleChange(event): void {\r\n        setTitle(event.target.value);\r\n\r\n    }\r\n    function onTxtChange(txt: string): void {\r\n        setTxt(txt);\r\n    }\r\n    function onDeleteMarkable(markableToDelete: string): void {\r\n        setMarkables(markables.filter(markable => markable.txt !== markableToDelete));\r\n\r\n    }\r\n    function onAddMarkable(markableToAdd: Markable): void {\r\n        setMarkables([...markables, markableToAdd]);\r\n    }\r\n    function onToggleMarkable() {\r\n        return\r\n    }\r\n    function onChooseColor(color) {\r\n        setBcg(color)\r\n    }\r\n    function onSendTodo() {\r\n\r\n        const newTodo: Todo = {\r\n            title,\r\n            type,\r\n            txt,\r\n            bgc,\r\n            pinned\r\n        }\r\n        if (type === 'list') newTodo.markables = markables;\r\n        onTodoSubmit(newTodo);\r\n        setInitialState();\r\n    }\r\n    function setInitialState() {\r\n        setTitle('Title');\r\n        setTxt('Enter text here');\r\n        setIsPinned(false);\r\n        setMarkables([]);\r\n        setBcg(null);\r\n        setPaleteOpen(false);\r\n    }\r\n\r\n    return (\r\n        <Card centered className=\"todo-card\" style={{ backgroundColor: bgc, transition: '0.3s', maxHeight: '100%' }}>\r\n            <Icon onClick={() => setIsPinned(!pinned)} className=\"pin-btn cursor-pointer\" style={{ marginBottom: \"20px\", alignSelf: 'center' }} color={pinned ? 'red' : 'black'} name='pin' />\r\n            <ContentEditable\r\n                innerRef={cardTitleRef}\r\n                html={title}\r\n                disabled={false}\r\n                onChange={onTitleChange}\r\n                tagName='h2'\r\n            />\r\n            {<Card.Description >{setTodoByType(type, txt, onTxtChange, onDeleteMarkable, onAddMarkable, onToggleMarkable, markables, isNewTxt, isNewTodo)}</Card.Description>}\r\n            <Card.Content textAlign=\"center\" className=\"card-btns-container\" >\r\n                <Popup\r\n                    on='click'\r\n                    pinned\r\n                    open={paleteOpen}\r\n                    onClose={() => setPaleteOpen(false)}\r\n                    onOpen={() => setPaleteOpen(true)}\r\n                    trigger={<Button circular icon> <Icon name=\"paint brush\" /></Button>}\r\n                >\r\n                    <ColorPalate onChooseColor={onChooseColor} />\r\n                </Popup>\r\n            </Card.Content>\r\n        </Card>\r\n    );\r\n}","import React, { useContext, useState } from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Select, Button, Container, Header, Input } from 'semantic-ui-react'\r\nimport { useForm } from '../services/customHooks'\r\nimport { RootStoreContext } from '../stores/RootStore'\r\nimport { NewTodoCard } from '../cmps/NewTodoCard'\r\nimport { Todo } from '../interfaces'\r\n\r\nexport const Head: React.FC = observer(() => {\r\n        const rootStoreContext = useContext(RootStoreContext);\r\n        const { todosStore, systemStore, userStore } = rootStoreContext;\r\n        const { todosAmount } = todosStore;\r\n        const { username } = userStore.loggedInUser;\r\n        const [todoType, setTodoType] = useState<string>('txt');\r\n        const [isSendTodo, setIsSendTodo] = useState<boolean>(false);\r\n        const [filterBy, handleChange] = useForm({ title: '' });\r\n\r\n        const inputOptions = [\r\n                { key: 'txt', text: 'Text', value: 'txt' },\r\n                { key: 'list', text: 'List', value: 'list' },\r\n                { key: 'img', text: 'Image', value: 'img' },\r\n                { key: 'video', text: 'Video', value: 'video' }\r\n        ];\r\n        function onChangeType(e, { name, value }): void {\r\n                setTodoType(value)\r\n        }\r\n        async function onTodoSubmit(todoToSubmit: Todo) {\r\n                try {\r\n                        setIsSendTodo(false)\r\n                        systemStore.turnLoaderOn();\r\n                        await todosStore.saveTodo(todoToSubmit);\r\n                        await todosStore.loadTodos();\r\n                        setTodoType('txt');\r\n                        systemStore.turnLoaderOff();\r\n                }\r\n                catch (error) {\r\n                        systemStore.onError()\r\n                }\r\n        }\r\n        function toggleIsSendTodo() {\r\n                setIsSendTodo(true)\r\n        }\r\n        async function onChangeQuery(event) {\r\n                handleChange(event)\r\n                todosStore.setFilter(event.target.value)\r\n                todosStore.loadTodos()\r\n        }\r\n        const isMultipleTodos = (todosAmount === 1)?'todo':'todos'\r\n\r\n        return (\r\n                <Container className=\"todos-header\" textAlign=\"center\">\r\n                        <Container className=\"search-container\" textAlign=\"left\">\r\n                                <Header > Hello {username}! you have {todosAmount } {isMultipleTodos} </Header>\r\n                                <Input\r\n                                        icon={{ name: 'search', circular: true }}\r\n                                        placeholder='Search for a todo'\r\n                                        onChange={onChangeQuery}\r\n                                        value={filterBy.title}\r\n                                        name=\"title\"\r\n                                        autoComplete=\"off\"\r\n                                />\r\n                        </Container>\r\n\r\n                        <Select name='type' value={todoType} onChange={onChangeType} options={inputOptions} style={{ minWidth: '8rem' }} />\r\n                        <Button type=\"button\" onClick={toggleIsSendTodo} >Send</Button>\r\n                        <NewTodoCard isSendTodo={isSendTodo} type={todoType} onTodoSubmit={onTodoSubmit} />\r\n                </Container>\r\n        );\r\n})","import React, { useContext, useState, useRef, useEffect } from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Markable, Todo } from '../interfaces'\r\nimport { Button, Icon, Popup, Card, Header } from 'semantic-ui-react'\r\nimport { RootStoreContext } from '../stores/RootStore'\r\nimport { ColorPalate } from './ColorPalate'\r\nimport { TxtTodo } from './TxtTodo'\r\nimport { ListTodo } from './ListTodo'\r\nimport { VideoImgTodo } from './VideoImgTodo'\r\nimport { setRelevantPlaceholder,setTodoByType } from '../services/mixins'\r\nimport ContentEditable from 'react-contenteditable'\r\n// import * as moment from 'moment';\r\n\r\n\r\ninterface todoProps {\r\n    todo: Todo,\r\n}\r\nconst moment = require('moment');\r\n\r\nexport const TodoCard: React.FC<todoProps> = observer(({ todo }) => {\r\n    const { txt, _id, pinned, title, created, lastUpdated, markables, type } = todo;\r\n    const rootStoreContext = useContext(RootStoreContext);\r\n    const { todosStore, systemStore } = rootStoreContext;\r\n    const [paleteOpen, setPaleteOpen] = useState<boolean>(false);\r\n    const [isNewTxt, setIsNewTxt] = useState(false);\r\n    const cardTitleRef = useRef();\r\n    useEffect(() => {\r\n        if (!txt) setIsNewTxt(true)\r\n    }, [])\r\n\r\n    async function onDeleteTodo() {\r\n        systemStore.turnLoaderOn()\r\n        await todosStore.deleteTodo(_id);\r\n        systemStore.turnLoaderOff();\r\n    }\r\n    function toggleIsNewTxt():void  {\r\n        setIsNewTxt(!isNewTxt);\r\n    }\r\n    function onChooseColor(chosenClr):void  {\r\n        todo.bgc = chosenClr;\r\n        onUpdateTodo(todo);\r\n        setPaleteOpen(false);\r\n    }\r\n    function onPinTodo():void  {\r\n        todo.pinned = !todo.pinned;\r\n        onUpdateTodo(todo);\r\n    }\r\n    let debounce = null;\r\n\r\n    function onTxtChange(txt: string, isDebounce: boolean = true): void {\r\n        if (!isDebounce) {\r\n            txtChange(txt);\r\n            return\r\n        }\r\n\r\n        if (debounce) clearTimeout(debounce)\r\n        debounce = setTimeout(() => {\r\n            txtChange(txt)\r\n        }, 2500);\r\n    }\r\n\r\n    function txtChange(txt: string):void {\r\n        todo.txt = txt;\r\n        onUpdateTodo(todo);\r\n        setIsNewTxt(false);\r\n    }\r\n    function onTitleChange(event):void {\r\n        if (debounce) clearTimeout(debounce)\r\n        debounce = setTimeout(() => {\r\n            todo.title = event.target.value;\r\n            onUpdateTodo(todo);\r\n        }, 2500);\r\n    }\r\n    function onToggleMarkable(markableToToggle:Markable):void {\r\n        markableToToggle.isDone = !markableToToggle.isDone;\r\n        todo.markables = todo.markables.map((markable) =>{\r\n            if(markable.txt === markableToToggle.txt ) markable = markableToToggle\r\n            return markable\r\n        })\r\n        onUpdateTodo(todo);\r\n    }\r\n    function onAddMarkable(markableToAdd:Markable):void {\r\n        todo.markables.push(markableToAdd);\r\n        onUpdateTodo(todo);\r\n    }\r\n    function onDeleteMarkable(markableTxt: string): void {\r\n        todo.markables = todo.markables.filter(markable => markable.txt !== markableTxt);\r\n        onUpdateTodo(todo);\r\n    }\r\n    async function onUpdateTodo(todoToUpdate: Todo = todo) {\r\n        try {\r\n            systemStore.turnLoaderOn();\r\n            await todosStore.saveTodo(todoToUpdate);\r\n            systemStore.turnLoaderOff();\r\n        }\r\n        catch (err) {\r\n            systemStore.onError()\r\n            console.log('OOPS!', err);\r\n        }\r\n    }\r\n    function isShowEditBtn():boolean | null{\r\n        if(type==='img' || type ==='video') return true\r\n    }\r\n    return (\r\n        <Card className=\"todo-card\" style={{ backgroundColor: todo.bgc, transition: '0.3s', maxHeight: '100%' }}>\r\n            <Icon onClick={onPinTodo} className=\"pin-btn cursor-pointer\" style={{ marginBottom: \"20px\", alignSelf: 'center' }} color={pinned ? 'red' : 'black'}  name='pin' />\r\n            <ContentEditable\r\n                innerRef={cardTitleRef}\r\n                html={title || 'title'}\r\n                disabled={false}\r\n                onChange={onTitleChange}\r\n                tagName='h2'\r\n            />\r\n            <Header as=\"h4\">Created :{`${moment(created).fromNow()}`}</Header>\r\n            {lastUpdated && <Header as=\"h4\">Last updated: {`${moment(lastUpdated).fromNow()}`}</Header>}\r\n            {<Card.Description >{setTodoByType(type,txt,onTxtChange,onDeleteMarkable,onAddMarkable,onToggleMarkable,markables,isNewTxt)}</Card.Description>}\r\n            <Card.Content textAlign=\"center\" className=\"card-btns-container\" >\r\n                <Button circular onClick={onDeleteTodo} icon>\r\n                    <Icon name=\"trash alternate outline\" />\r\n                </Button>\r\n                {isShowEditBtn() && <Button active ={isNewTxt} circular onClick={toggleIsNewTxt} icon>\r\n                    <Icon name=\"edit outline\" />\r\n                </Button>}\r\n                <Popup\r\n                    on='click'\r\n                    pinned\r\n                    open={paleteOpen}\r\n                    onClose={() => setPaleteOpen(false)}\r\n                    onOpen={() => setPaleteOpen(true)}\r\n                    trigger={<Button circular icon> <Icon name=\"paint brush\" /></Button>}\r\n                >\r\n                    <ColorPalate onChooseColor={onChooseColor} />\r\n                </Popup>\r\n            </Card.Content>\r\n        </Card>\r\n    );\r\n})","import React from 'react'\r\nimport { Todo } from '../interfaces'\r\nimport { TodoCard } from '../cmps/TodoCard'\r\nimport Masonry from 'react-masonry-css'\r\ninterface TodosListProps {\r\n    todos: Todo[],\r\n\r\n}\r\n\r\nexport const TodosList: React.FC<TodosListProps> = ({ todos,  }) => {\r\n    const breakpointColumnsObj = {\r\n        default: 4,\r\n        1100: 3,\r\n        700: 2,\r\n        500: 1\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n        <ul className=\"todos-list clean-list \">\r\n            <Masonry breakpointCols={breakpointColumnsObj}\r\n                className=\"my-masonry-grid\"\r\n                columnClassName=\"my-masonry-grid_column\">\r\n                {todos.map(todo => {\r\n                   if(todo.pinned) return <TodoCard  key={todo._id} todo={todo} />\r\n                })}\r\n\r\n            </Masonry>\r\n\r\n        </ul>\r\n        <ul className=\"todos-list clean-list \">\r\n            <Masonry breakpointCols={breakpointColumnsObj}\r\n                className=\"my-masonry-grid\"\r\n                columnClassName=\"my-masonry-grid_column\">\r\n                {todos.map(todo => {\r\n                    if(!todo.pinned)return <TodoCard  key={todo._id} todo={todo} />\r\n                })}\r\n\r\n            </Masonry>\r\n\r\n        </ul>\r\n        </React.Fragment>\r\n\r\n    );\r\n}","import React from 'react'\r\nimport { Segment,Icon,Header } from 'semantic-ui-react'\r\n\r\ninterface NoTodosMsgProps {\r\n\r\n}\r\n\r\nexport const NoTodosMsg: React.FC<NoTodosMsgProps> = ({ }) => {\r\n    return (<Segment textAlign=\"center\">\r\n        <Header icon>\r\n            <Icon name='exclamation' />\r\n      You have no Todos. Please make some. \r\n    </Header>\r\n    </Segment>);\r\n}","import React, { useContext } from 'react'\r\nimport {  Header, Icon, Button, Message } from 'semantic-ui-react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { RootStoreContext } from '../stores/RootStore'\r\n\r\n\r\n\r\nexport const ErrorModal: React.FC= observer(() => {\r\n    const rootStoreContext = useContext(RootStoreContext);\r\n    const { systemStore } = rootStoreContext;\r\n\r\n    function onHandleSystemError() {\r\n        systemStore.onErrorHandle()\r\n    }\r\n    const msgStyle = {\r\n        position: 'fixed',\r\n        top: '30%',\r\n        border: '0',\r\n        left: '0',\r\n        right: '0',\r\n        bottom: '0',\r\n        zIndex: '9999',\r\n        height: '200px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n    }\r\n\r\n    return (\r\n\r\n        <Message\r\n            style={msgStyle}\r\n\r\n            error\r\n            onClose={onHandleSystemError}\r\n            floating={true}\r\n        >\r\n            <Header icon>\r\n                <Icon name='archive' />\r\n        OOPS! an error occoured\r\n      </Header>\r\n            <Message.Content>\r\n                <p>\r\n                    Please try again\r\n        </p>\r\n            </Message.Content>\r\n            <Message.Content>\r\n                <Button onClick={onHandleSystemError} basic color='red'  >\r\n                    <Icon name='remove' /> Ok\r\n        </Button>\r\n            </Message.Content>\r\n\r\n\r\n        </Message>\r\n\r\n\r\n    );\r\n})","import React, { useEffect, useContext } from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Head } from '../cmps/Head'\r\nimport { TodosList } from '../cmps/TodosList'\r\nimport { RootStoreContext } from '../stores/RootStore'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { NoTodosMsg } from '../cmps/NoTodosMsg'\r\nimport { ErrorModal } from '../cmps/ErrorModal'\r\nimport { Dimmer } from 'semantic-ui-react'\r\n\r\nconst TodosApp= observer(() => {\r\n  const rootStoreContext = useContext(RootStoreContext);\r\n  const { todosStore, userStore, systemStore } = rootStoreContext;\r\n  const { todos, sortedTodos } = todosStore;\r\n  const { loggedInUser } = userStore;\r\n  const router = useHistory();\r\n  const isError = systemStore.isError.existingError;\r\n\r\n  useEffect(() => {\r\n\r\n    onAppLoad()\r\n  }, [])\r\n  async function onAppLoad() {\r\n    try {\r\n      if (!loggedInUser) userStore.getLoggedInUser()\r\n      if (!loggedInUser) throw Error\r\n      await todosStore.loadTodos()\r\n    }\r\n    catch(err) {\r\n      console.log('catch',err)\r\n      router.push('/')\r\n    }\r\n  }\r\n\r\n  if (!todos) {\r\n    systemStore.turnLoaderOn();\r\n    return null\r\n  }\r\n  systemStore.turnLoaderOff();\r\n  return (\r\n    <React.Fragment>\r\n      <Dimmer active={(isError)} style={{ position: 'fixed' }} />\r\n        <Head />\r\n        {loggedInUser && todos && <TodosList todos={sortedTodos} />}\r\n        {loggedInUser && !todos.length && <NoTodosMsg />}\r\n        {isError &&\r\n          <ErrorModal />\r\n        }\r\n\r\n    </React.Fragment>\r\n  )\r\n})\r\n\r\nexport default TodosApp","export default __webpack_public_path__ + \"static/media/profile.27221dc4.jpg\";","import React from 'react'\r\nimport { Container, Header, Image, Segment } from 'semantic-ui-react'\r\nimport Profile from '../assets/profile.jpg'\r\nconst About: React.FC = () => {\r\n    return (\r\n            <Container className=\"about-page\" textAlign=\"center\">\r\n                <Image centered circular size=\"medium\" src={Profile} />\r\n                <Segment>\r\n                    <Header>Hi! my name is Nadav Samuel and i'm a <strong>Full-Stack</strong> developer!\r\n</Header>\r\n                    <Container textAlign=\"left\" as=\"p\" >I'm 22 years old, born in Givaataim, Israel. Motivational fullstack web developer. People person and a team player.</Container>\r\n                    <Container textAlign=\"left\" as=\"p\" >I took this project as an opportunity to study some new technologies: MobX for state management and Typescript.\r\n                    </Container>\r\n                    <Container textAlign=\"left\">\r\n                        <a href=\"https://nadav-samuel-portfolio.herokuapp.com/#/\">Check out my portfolio!</a>\r\n                        <br />\r\n                        <br />\r\n                        <a href=\"https://www.linkedin.com/in/nadav-samuel-0b51291b9/\">Check out my Linkedin!</a>\r\n                    </Container>\r\n                    <Header as=\"h2\" textAlign=\"left\">samuelna9@gmail.com</Header>\r\n                </Segment>\r\n\r\n            </Container>\r\n\r\n\r\n    );\r\n}\r\nexport default About","import React from 'react'\r\nimport {  Message } from 'semantic-ui-react'\r\n\r\ninterface LoginErrMsgProps {\r\n    errorStatus?:number\r\n\r\n}\r\n\r\nexport const LoginErrMsg: React.FC<LoginErrMsgProps> = ({errorStatus = null}) => {\r\n\r\n    const msgContent = (errorStatus === 401)? 'OOPS! Wrong e-mail or password':'OOPS! Something went wrong';\r\n        return (\r\n            <Message negative>\r\n                <Message.Header>{msgContent}</Message.Header>\r\n                <p>Please try again</p>\r\n            </Message>)\r\n        \r\n}","import React, { useContext, useState } from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Button, Form, Header, Container } from 'semantic-ui-react'\r\nimport { LoginErrMsg } from '../cmps/LoginErrMsg'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { RootStoreContext } from '../stores/RootStore'\r\nimport { useForm, useMediaQuery } from '../services/customHooks'\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\n\r\nconst Login: React.FC = observer(() => {\r\n    const rootStoreContext = useContext(RootStoreContext);\r\n    const { userStore, systemStore } = rootStoreContext;\r\n    const [credentials, handleChange, clearFildes] = useForm({ email: '', password: '', username: '' });\r\n    const [isSignup, setIsSignup] = useState<boolean>(false);\r\n    const isError = systemStore.isError.existingError;\r\n    const { errorStatus } = systemStore.isError;\r\n\r\n    const formStyle = {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    }\r\n    const mediaQuery = useMediaQuery('(min-width: 600px)')\r\n    function determinFildesWidth() {\r\n        if (mediaQuery) return 5;\r\n        else return 10;\r\n    }\r\n    const router = useHistory()\r\n    async function onLoginSignup() {\r\n        try {\r\n\r\n            if (!isSignup) await userStore.onlogin(credentials);\r\n            else await userStore.onSignup(credentials);\r\n            if (userStore.loggedInUser) router.push('/TodosApp');\r\n\r\n        }\r\n        catch {\r\n            systemStore.onError();\r\n            clearFildes();\r\n        }\r\n    }\r\n    function onToggleSignup(): void {\r\n        setIsSignup(!isSignup);\r\n    }\r\n\r\n\r\n    const formBtnContent: string = isSignup ? 'Sign up' : 'Login';\r\n    const signupBtnContent: string = !isSignup ? 'Create an account!' : 'Switch to login ';\r\n    const usernameFiled: JSX.Element = (<Form.Field width={determinFildesWidth()}>\r\n        <label>Username</label>\r\n        <input type=\"text\" onChange={handleChange} name=\"username\" placeholder=\"Enter user name\" />\r\n    </Form.Field>)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container className=\"login-page\">\r\n                <Header textAlign=\"center\" as=\"h1\">Welcome to Todos App!</Header>\r\n                {isError && <LoginErrMsg errorStatus={errorStatus} />}\r\n                <Form onSubmit={onLoginSignup} style={formStyle}>\r\n                    {isSignup && usernameFiled}\r\n                    <Form.Field width={determinFildesWidth()}>\r\n                        <label>Email</label>\r\n                        <input type=\"email\" onChange={handleChange} name=\"email\" placeholder=\"Enter email\" />\r\n                    </Form.Field>\r\n                    <Form.Field width={determinFildesWidth()}>\r\n                        <label>Password</label>\r\n                        <input type=\"password\" onChange={handleChange} name=\"password\" placeholder=\"Enter password\" />\r\n                    </Form.Field>\r\n                    <Button type=\"submit\">{formBtnContent}</Button>\r\n                </Form>\r\n                <Button className=\"switch-btn\" onClick={onToggleSignup} content={signupBtnContent} basic />\r\n            </Container>\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n)\r\nexport default Login","import React, { useContext } from 'react'\r\nimport { Menu, Header, Button, Loader, Segment, Dimmer, Icon } from 'semantic-ui-react'\r\nimport { RootStoreContext } from '../stores/RootStore'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport const Navbar: React.FC = observer(() => {\r\n        const router = useHistory()\r\n        const rootStoreContext = useContext(RootStoreContext);\r\n        const { userStore, systemStore } = rootStoreContext;\r\n        const { loggedInUser } = userStore;\r\n        const { isLoading } = systemStore;\r\n        async function onLogout() {\r\n                try {\r\n                        router.push('/')\r\n                        await userStore.logout()\r\n\r\n                }\r\n                catch (err) {\r\n                        systemStore.onError()\r\n                        console.log('OOPS! had problem at logout, ', err)\r\n                }\r\n        }\r\n\r\n        return (\r\n\r\n                <Menu as=\"nav\" fluid >\r\n                        <Menu.Item as={Header} name=\"Todos App\" >\r\n                                <Link to={loggedInUser? `/TodosApp`:`/`}>\r\n                                        <a>Todos App</a>\r\n                                </Link>\r\n                        </Menu.Item>\r\n                        {loggedInUser && <Menu.Item position=\"left\">\r\n                                <Segment>\r\n                                        <Dimmer active inverted>\r\n                                                {isLoading ? <Loader inverted /> : <Icon color=\"green\" size=\"large\" name=\"check\" />}\r\n                                        </Dimmer>\r\n                                </Segment>\r\n                        </Menu.Item>}\r\n                        <Menu.Menu position=\"right\">\r\n                                <Menu.Item>\r\n                                        <Link to=\"/About\">\r\n                                                <a>About</a>\r\n                                        </Link>\r\n                                </ Menu.Item>\r\n                                {loggedInUser && <Menu.Item position=\"right\"><Button onClick={onLogout}>Logout</Button></Menu.Item>}\r\n                        </Menu.Menu>\r\n\r\n                </Menu >\r\n\r\n        )\r\n})","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport TodosApp from './pages/TodosApp'\nimport About from './pages/About'\nimport Login from './pages/Login'\nimport {Navbar} from './cmps/Navbar'\nimport './styles/global.scss'\n// import { About } from './pages/About';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Router>\n      <Navbar />\n      <main>\n        <Switch>\n          <Route path=\"/TodosApp\" component={TodosApp} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/\" component={Login} />\n        </Switch>\n      </main>\n    </Router>\n\n  </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\nimport './styles/global.scss'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}